{"version":3,"sources":["components/todoView/Todo.js","components/todoView/firebase.js","components/practice/NEWModel.js","components/practice/printData.js","components/myapp.js","components/App.js","reportWebVitals.js","index.js"],"names":["Todo","props","duration","ease","allData","length","map","value","index","List","ListItem","className","noteData","Button","type","onClick","e","preventDefault","deleteFunction","id","variant","color","startIcon","firebase","apps","console","log","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","settings","timeStampsInSnapshots","useStyles","makeStyles","theme","modals","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","borderRadius","padding","spacing","maxWidth","NewModel","data","change","classes","React","useState","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","timestamp","Input","onChange","target","note","PrintData","delData","updateAdata","val","Myapp","setAllData","small","setSmall","useEffect","collection","orderBy","onSnapshot","snapshot","sen","docs","doc","Note","onKeyPress","key","add","FieldValue","serverTimestamp","update","TargetData","noteToupdate","set","merge","delID","delete","App","setData","send","onSubmit","TextField","label","disabled","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cdfacf5.chunk.js","sourcesContent":["import React from \"react\";\nimport { List, ListItem, Button } from \"@material-ui/core/\";\nimport FlipMove from 'react-flip-move';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nfunction Todo(props) {\n  return (\n    <ol>\n        <FlipMove duration=\"3000\" ease=\"ease-in-out\">\n      {props.allData.length>0?props.allData.map((value, index) => {\n        return (\n          <List key={index}>\n            <ListItem className=\"h5\">Note</ListItem>\n            <ListItem>\n              {index + 1}. {value.noteData}\n            </ListItem>\n            <ListItem>\n              <Button\n                className=\"\"\n               \n                type=\"submit\"\n                onClick={(e) => {\n\n                  e.preventDefault();\n                  props.deleteFunction(value.id)\n\n                }}\n                variant=\"contained\"\n                color=\"secondary\"\n               \n               \n                \n                startIcon={<DeleteForever />}\n              >\n                Delete\n             \n              </Button>\n            </ListItem>\n          </List>\n        );\n      }):null}</FlipMove>\n    </ol>\n  );\n}\n\nexport default Todo;\n","\n\nimport firebase from 'firebase'\n\nlet config ={\n  apiKey: \"AIzaSyBUE2TQM5khdTb9vcbBkQYqOVujaR_OYTk\",\n  authDomain: \"todo-app-cp-9ca9b.firebaseapp.com\",\n  projectId: \"todo-app-cp-9ca9b\",\n  storageBucket: \"todo-app-cp-9ca9b.appspot.com\",\n  messagingSenderId: \"999082076512\",\n  appId: \"1:999082076512:web:def7977569dfca904cd605\",\n  measurementId: \"G-3Z4ZDWFQCX\"\n}\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}else {\n console.log(\"Else MAIN\");\n  firebase.app(); // if already initialized, use that one\n}\nconst db=firebase.firestore()\ndb.settings({timeStampsInSnapshots:true})\nexport default db\n/*\n\n db.collection(\"movies\")\n      .get()\n      .then((snapshot) => {\n        snapshot.docs.forEach((value) => {\n          console.log(\"new\", value.data().Marvel);\n          return value.data().Marvel.map((val) => console.log(val));\n        });\n      });\n\n    db.collection(\"MYTODO\").onSnapshot((snapshot) => {\n      console.log(\n        \"Snap :\",\n        snapshot.docs.map((doc) => {\n          return doc.data().food;\n        })\n      );\n      let NewData = snapshot.docs.map((doc) => {\n        return doc.data().food;\n      });\n\n      setAllData((prev) => [...prev, NewData]);\n    });\n    db.collection(\"MYTODO\").onSnapshot((snapshots) => {\n      let d = snapshots.docs.forEach((doc) => {\n        console.log(\"D:  ::::\", doc.data().food);\n        return doc.data().food;\n      });\n      console.log(\"D:  ::::\", d);\n    });\n    db.collection(\"movies\")\n      .get()\n      .then((element) => {\n        element.docs.map((doc, index) => {\n          doc.data().Marvel.map((val) => console.log(\"FOR EACH :\", val));\n          return doc.data();\n        });\n      });\n\n    db.collection(\"movies\").onSnapshot((snapshot) => {\n      let store = snapshot.docs.map((doc) => {\n        return doc.data();\n      });\n      console.log(store[0].Marvel);\n      setAllData((prev) => [...prev.concat(store[0].Marvel)]);\n    });*/\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { Button,Input } from \"@material-ui/core/\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst useStyles = makeStyles((theme) => ({\n  modals: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    borderRadius: \"16px\",\n    padding: theme.spacing(2, 4, 3),\n    maxWidth: \"1366px\",\n  },\n}));\n\nfunction NewModel({ data ,change}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        type=\"button\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={handleOpen}\n      >\n        Edite\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modals}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">{data.timestamp}</h2>\n            <p id=\"transition-modal-description\"><Input onChange={(e)=>change(data,e.target.value)} value={data.note}/></p>\n            <Button\n              onClick={handleClose}\n              variant=\"contained\"\n              color=\"secondary\"\n              startIcon={<CloseIcon />}\n             \n              \n            >\n              Close{\" \"}\n            </Button>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default NewModel;\n","import React from \"react\";\nimport { List, ListItem, Button } from \"@material-ui/core/\";\nimport FlipMove from \"react-flip-move\";\n\nimport NewModel from \"./NEWModel\"\n\nfunction PrintData({ allData, delData,updateAdata }) {\n \n  return (\n    <div>\n      \n      <ul className=\"\">\n        <FlipMove duration={2000} ease=\"easeIn\">\n          {allData.length > 0\n            ? allData.map((val) => {\n                return (\n                  <List key={val.id}>\n                      <NewModel change={updateAdata} id={val.id} data={val}/>\n                    <ListItem className=\"\">{val.note}</ListItem>\n                    <ListItem>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                          delData(val.id);\n                        }}\n                        color=\"secondary\"\n                      >\n                        Delete\n                      </Button>\n                    </ListItem>\n                  </List>\n                );\n              })\n            : null}\n        </FlipMove>\n      </ul>\n    </div>\n  );\n}\n\nexport default PrintData;\n","import React,{useState,useEffect} from 'react'\nimport { Input } from \"@material-ui/core/\";\nimport db from \"./todoView/firebase\";\nimport PrintData from './practice/printData'\nimport firebase from \"firebase\"\nfunction Myapp() {\n    let [allData,setAllData]=useState([])\n    let [small,setSmall]=useState(\"\")\n    \n    function delData(delID){\n       // alert(delID)\n        db.collection(\"notes2\").doc(delID).delete()\n    }\n    useEffect(() => {\n       \n        db.collection(\"notes2\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot=>{\n            //setAllData([])\n           let sen= snapshot.docs.map(doc=>{\n                console.log(\"INDIDE\")\n               return  {id:doc.id ,note:doc.data().Note}\n    \n               \n            })\n            setAllData(sen)\n\n        })\n       \n    }, []);\n\n    function update(e){\n        if(e.key===\"Enter\"){\n\n            db.collection(\"notes2\").add({\n                timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n                Note:small\n            })\n        }else{\n\n        }\n        \n    }\n    function updateAdata(TargetData,noteToupdate){\n        db.collection(\"notes2\").doc(TargetData.id).set({\n            Note:noteToupdate\n        },{merge:true})\n    }\n    return (\n        <div>\n            <h1>MYAPP</h1>\n            <Input onKeyPress={(e)=>{update(e)}} onChange={(e)=>{setSmall(e.target.value)}} value={small}/>\n\n            <PrintData updateAdata={updateAdata} delData={delData} allData={allData}/>\n        </div>\n    )\n}\n\nexport default Myapp\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button, TextField } from \"@material-ui/core/\";\nimport Todo from \"./todoView/Todo\";\n\nimport db from \"./todoView/firebase\";\nimport firebase from \"firebase\"\nimport Myapp from './myapp'\nexport default function App() {\n  let [data, setData] = useState(\"\");\n  let [allData, setAllData] = useState('');\n\n//[{id:1,noteData:\"Pre Action Data\"}, {id:2,noteData:\"Pre Action Data2\"}]\n\n  useEffect(() => {\n    console.log(\"Maga base\");\n\n    // db.collection(\"MYTODO\").get().then((snapshot)=>{\n    //   snapshot.docs.forEach(doc=>{\n    //     ///setAllData((prev)=>{return [...prev ,doc.data().food]})\n    //     console.log(doc.data())//.fruits,doc.data().food\n    //   })\n    // })\n    //console.log(db.collection(\"todos\").get());\n    db.collection(\"notes2\").orderBy('timestamp','desc').onSnapshot(snapshot=>{\n      \n     let send= snapshot.docs.map((doc)=>{\n\n      return {id:doc.id,noteData:doc.data().Note}\n        // console.log(doc.data().timestamp)\n        // return doc.data().Note\n        \n        \n      })\n      setAllData(send)\n     \n    })\n\n   \n  }, []);\n  function update() {\n    if (data === \"\" || data === null || data === undefined) {\n    } else {\n      \n\n      db.collection(\"notes2\").add({\n        Note:data,\n        timestamp:firebase.firestore.FieldValue.serverTimestamp()\n      })\n      // setAllData((prev) => {\n      //   return [...prev, data];\n      // });\n    }\n  }\n  function deleteFunction(delID){\n    db.collection(\"notes2\").doc(delID).delete()\n  }\n\n  return (\n    <div>\n      <div>\n        <div className=\"container\">\n          <div className=\"h4 text-center mt-3 mb-5\">\n            🔥Firebase connected todo app\n          </div>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <div className=\"inputSection d-flex justify-content-between w-75 m-auto\">\n              <TextField\n                id=\"standard\"\n                label=\"🍓Note\"\n                onChange={(e) => {\n                  setData(e.target.value);\n                }}\n                className=\"w-75 mr-2\"\n                type=\"text\"\n                value={data}\n              />\n              <Button\n                className=\"ml-3\"\n                disabled={!data}\n                type=\"submit\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  update();\n                }}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Activate\n              </Button>\n            </div>\n          </form>\n          <div className=\"mt-5\">\n            {allData?<Todo deleteFunction={deleteFunction} allData={allData} />:null}\n          </div>\n          <div className='mt-5'>\n            <Myapp/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}